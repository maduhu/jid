package com.sos.dailyschedule.classes;

import static org.junit.Assert.assertEquals;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.Query;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.sos.dailyschedule.job.CreateDailyScheduleOptions;
import com.sos.resources.SOSResourceFactory;
import com.sos.resources.SOSTestResource;

/**
 * \class Calendar2DBTest
 * 
 * \brief Calendar2DBTest -
 * 
 * \details
 * 
 * \section Calendar2DBTest.java_intro_sec Introduction
 * 
 * \section Calendar2DBTest.java_samples Some Samples
 * 
 * \code .... code goes here ... \endcode
 * 
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author Uwe Risse \version 06.10.2011 \see reference
 * 
 * Created on 06.10.2011 17:39:33
 */

public class SOSDatabaseConfigurationFileMatcherTest {

    @SuppressWarnings("unused")
    private final String conClassName = "SOSDatabaseConfigurationFileMatcherTest";
    private File configurationFile;

    public SOSDatabaseConfigurationFileMatcherTest() {
        //
    }

    @BeforeClass
    public static void setUpBeforeClass() throws Exception {
    }

    @AfterClass
    public static void tearDownAfterClass() throws Exception {
    }

    @Before
    public void setUp() throws Exception {
        configurationFile = SOSResourceFactory.asFile(SOSTestResource.HIBERNATE_CONFIGURATION_ORACLE);
        ;
    }

    @After
    public void tearDown() throws Exception {
    }

    @Test
    public void testScanForHibernateConfigurationFiles() throws Exception {

        File f = new File(configurationFile.getParent(),"hibernate.cfg.mssql.xml");
        f.createNewFile();
        f = new File(configurationFile.getParent(), "hibernate.cfg.mysql.xml");
        f.createNewFile();
        f = new File(configurationFile.getParent(), "hibernate.cfg_oracle.xml");
        f.createNewFile();
        f = new File(configurationFile.getParent(), "hibernate.cfg.xml");
        f.createNewFile();

        SOSDatabaseConfigurationFileMatcher sosDatabaseConfigurationFileMatcher = new SOSDatabaseConfigurationFileMatcher(configurationFile);
        ArrayList<SOSDatabaseConfigurationFileMatcherEntry> hibernateConfigurationFiles = sosDatabaseConfigurationFileMatcher.scanForHibernateConfigurationFiles();

        assertEquals( "Test testScanForHibernateConfigurationFiles failed...", hibernateConfigurationFiles.size(), 3);

        File myFile = sosDatabaseConfigurationFileMatcher.getFile("mysql");
        assertEquals( "Test testScanForHibernateConfigurationFiles failed...",myFile.getName(),"hibernate.cfg.mysql.xml");
        
        for (int i = 0; i < hibernateConfigurationFiles.size(); i++) {
            SOSDatabaseConfigurationFileMatcherEntry sosDatabaseConfigurationFileMatcherEntry = hibernateConfigurationFiles .get(i);
            String dbName = sosDatabaseConfigurationFileMatcherEntry.getDbName();
            String fileName = sosDatabaseConfigurationFileMatcherEntry.getFile().getName().toLowerCase();
            if (dbName.equals("mssql")) {
                assertEquals("Test testScanForHibernateConfigurationFiles failed...",fileName, "hibernate.cfg.mssql.xml");
            } else {
                if (dbName.equals("mysql")) {
                    assertEquals("Test testScanForHibernateConfigurationFiles failed...",fileName, "hibernate.cfg.mysql.xml");
                } else {
                    if (dbName.equals("default")) {
                        assertEquals( "Test testScanForHibernateConfigurationFiles failed...",fileName,"hibernate_oracle.cfg.xml");
                    }
                }
            }
        }
    }

}
