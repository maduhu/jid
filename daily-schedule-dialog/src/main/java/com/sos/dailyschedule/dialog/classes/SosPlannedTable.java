package com.sos.dailyschedule.dialog.classes;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Table;

import com.sos.dashboard.globals.DashBoardConstants;
import com.sos.dialog.classes.SOSTable;
import com.sos.dialog.components.SOSTableColumn;
import com.sos.dialog.interfaces.ISOSTable;
import com.sos.localization.Messages;

/**
* \class SosPlannedTable 
* 
* \brief SosPlannedTable - 
* 
* \details
*
* \section SosPlannedTable.java_intro_sec Introduction
*
* \section SosPlannedTable.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author Uwe Risse
* \version 31.01.2012
* \see reference
*
* Created on 31.01.2012 09:59:28
 */
public class SosPlannedTable extends SOSTable implements ISOSTable {
	@SuppressWarnings("unused")
	private final String	conClassName	= "SosPlannedTable";

	public SosPlannedTable(Composite composite, int style) {
		super(composite, style);
		createTable();
	}

	protected void checkSubclass() {
		// Disable the check that prevents subclassing of SWT components
	}

    @Override
	public void createTable() {
		this.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 9, 2));
		this.setSortDirection(SWT.UP);
		this.setLinesVisible(true);
		this.setHeaderVisible(true);
		Messages messages = new Messages(DashBoardConstants.conPropertiesFileName);
		
        new SOSTableColumn(this, " " , 30, messages);
        new SOSTableColumn(this, DashBoardConstants.conSOSDashB_SchedulerID /* "Id" */, 50, messages);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_JOB /* "Job" */, 100, messages);
	//	new SOSTableColumn(this, DashBoardConstants.conSOSDashB_JOBCHAIN /* "Job Chain" */, 100, Messages);
	//	new SOSTableColumn(this, DashBoardConstants.conSOSDashB_ORDER /* "Order" */, 100, Messages);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_Planned /* "Planned" */, 100, messages,SOSTableColumn.ColumnType.DATE);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_Executed /* "Executed",  */,  100, messages,SOSTableColumn.ColumnType.DATE);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_END /* "Ended",  */,  100, messages,SOSTableColumn.ColumnType.DATE);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_DURATION /* "Duration",  */,  90, messages,SOSTableColumn.ColumnType.DATE);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_EXIT /* "Exit" */, 100, messages);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_Status /* "Status" */, 100, messages);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_LATE /* "Late" */, 53, messages);
        setMoveableColums(true);		
	}
  

	 
	
}
