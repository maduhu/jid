package com.sos.scheduler.db;

/** \class SchedulerInstancesDBItem
 * 
 * \brief SchedulerInstancesDBItem -
 * 
 * \details
 *
 * \section SchedulerInstancesDBItem_intro_sec Introduction
 *
 * \section SchedulerInstancesDBItem.java_samples Some Samples
 *
 * \code .... code goes here ... \endcode
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author Uwe Risse \version 23.09.2011 \see reference
 *
 * Created on 23.09.2011 15:08:05 */

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.persistence.*;
import com.sos.hibernate.classes.DbItem;

@Entity
@Table(name = "SCHEDULER_INSTANCES")
public class SchedulerInstancesDBItem extends DbItem {

    private Long id;
    private String schedulerId;

    private String hostName;
    private Integer tcpPort;
    private Integer udpPort;
    private Integer jettyHttpPort;
    private Integer jettyHttpsPort;
    private Date startTime;
    private Date stopTime;
    private String dbName;
    private String dbHistoryTableName;
    private String dbOrderHistoryTableName;
    private String dbOrdersTableName;
    private String dbTasksTableName;
    private String dbVariablesTableName;
    private String workingDirectory;
    private String liveDirectory;
    private String logDir;
    private String includePath;
    private String iniPath;
    private Boolean isService = false;
    private Boolean isRunning = false;
    private Boolean isPaused = false;
    private Boolean isCluster = false;
    private Boolean isAgent = false;
    private Boolean isSosCommandWebservice = false;
    private String param;
    private String url;

    private Integer supervisorTcpPort;
    private String supervisorHostName;

    private String dateFormat = "yyyy-MM-dd hh:mm";

    public SchedulerInstancesDBItem(String dateFormat_) {
        this.dateFormat = dateFormat_;
    }

    public SchedulerInstancesDBItem() {

    }

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "`ID`")
    public Long getId() {
        return id;
    }

    @Column(name = "`ID`")
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "`SCHEDULER_ID`", nullable = false)
    public void setSchedulerId(String schedulerId) {
        this.schedulerId = schedulerId;
    }

    @Column(name = "`SCHEDULER_ID`", nullable = false)
    public String getSchedulerId() {
        return schedulerId;
    }

    @Column(name = "`HOSTNAME`", nullable = true)
    public void setHostName(String hostname) {
        this.hostName = hostname;
    }

    public void setHostname(String hostname) {
        setHostName(hostname);
    }

    @Column(name = "`HOSTNAME`", nullable = true)
    public String getHostName() {
        return hostName;
    }

    @Column(name = "`SUPERVISOR_HOSTNAME`", nullable = true)
    public void setSupervisorHostName(String supervisorHostname) {
        this.supervisorHostName = supervisorHostname;
    }

    public void setSupervisorHostname(String supervisorHostname) {
        setSupervisorHostName(supervisorHostname);
    }

    @Column(name = "`SUPERVISOR_HOSTNAME`", nullable = true)
    public String getSupervisorHostName() {
        return supervisorHostName;
    }

    @Transient
    public String getHostname() {
        return getHostName();
    }

    @Column(name = "`TCP_PORT`", nullable = true)
    public void setTcpPort(Integer tcpPort) {
        this.tcpPort = tcpPort;
    }

    @Column(name = "`TCP_PORT`", nullable = true)
    public Integer getTcpPort() {
        return tcpPort;
    }

    @Transient
    public String getTcpPortValue() {
        return String.valueOf(tcpPort);
    }

    @Column(name = "`SUPERVISOR_TCP_PORT`", nullable = true)
    public void setSupervisorTcpPort(Integer supervisorTcpPort) {
        this.supervisorTcpPort = supervisorTcpPort;
    }

    @Column(name = "`SUPERVISOR_TCP_PORT`", nullable = true)
    public Integer getSupervisorTcpPort() {
        return supervisorTcpPort;
    }

    @Transient
    public String getSupervisorTcpPortValue() {
        return String.valueOf(supervisorTcpPort);
    }

    @Column(name = "`JETTY_HTTP_PORT`", nullable = true)
    public void setJettyHttpPort(Integer jettyHttpPort) {
        this.jettyHttpPort = jettyHttpPort;
    }

    @Column(name = "`JETTY_HTTP_PORT`", nullable = true)
    public Integer getJettyHttpPort() {
        return jettyHttpPort;
    }

    @Transient
    public String getJettyHttpPortValue() {
        return String.valueOf(jettyHttpPort);
    }

    @Column(name = "`JETTY_HTTPS_PORT`", nullable = true)
    public void setJettyHttpsPort(Integer jettyHttpsPort) {
        this.jettyHttpsPort = jettyHttpsPort;
    }

    @Transient
    public String getJettyHttpsPortValue() {
        return String.valueOf(jettyHttpsPort);
    }

    @Column(name = "`JETTY_HTTPS_PORT`", nullable = true)
    public Integer getJettyHttpsPort() {
        return jettyHttpsPort;
    }

    @Column(name = "`IS_SOS_COMMAND_WEBSERVICE`", nullable = true)
    public void setIsSosCommandWebservice(Boolean isSosCommandWebservice) {
        this.isSosCommandWebservice = isSosCommandWebservice;
    }

    @Column(name = "`IS_SOS_COMMAND_WEBSERVICE`", nullable = true)
    public Boolean getIsSosCommandWebservice() {
        if (isSosCommandWebservice == null) {
            return false;
        } else {
            return isSosCommandWebservice;
        }
    }

    @Column(name = "`UDP_PORT`", nullable = true)
    public void setUdpPort(Integer udpPort) {
        this.udpPort = udpPort;
    }

    @Transient
    public String getUdpPortValue() {
        return String.valueOf(udpPort);
    }

    @Column(name = "`UDP_PORT`", nullable = true)
    public Integer getUdpPort() {
        return udpPort;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`START_TIME`", nullable = true)
    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`START_TIME`", nullable = true)
    public Date getStartTime() {
        return startTime;
    }

    @Transient
    public String getSchedulePlannedIso() {
        if (this.getStartTime() == null) {
            return "";
        } else {
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String startTimeIso = formatter.format(this.getStartTime());
            return startTimeIso;
        }
    }

    @Transient
    public String getStartTimeFormated() {
        return getDateFormatted(this.getStartTime());
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`START_TIME`", nullable = true)
    public void setStopTime(Date stopTime) {
        this.stopTime = stopTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`STOP_TIME`", nullable = true)
    public Date getStopTime() {
        return stopTime;
    }

    @Transient
    public String getStopTimeIso() {
        if (this.getStopTime() == null) {
            return "";
        } else {
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String stopTimeIso = formatter.format(this.getStopTime());
            return stopTimeIso;
        }
    }

    @Transient
    public String getStopTimeFormated() {
        return getDateFormatted(this.getStopTime());
    }

    @Column(name = "`DB_NAME`", nullable = true)
    public void setDbName(String dbName) {
        this.dbName = dbName;
    }

    @Column(name = "`DB_NAME`", nullable = true)
    public String getDbName() {
        return dbName;
    }

    @Column(name = "`DB_HISTORY_TABLE_NAME`", nullable = true)
    public void setDbHistoryTableName(String dbHistoryTableName) {
        this.dbHistoryTableName = dbHistoryTableName;
    }

    @Column(name = "`DB_HISTORY_TABLE_NAME`", nullable = true)
    public String getDbHistoryTableName() {
        return dbHistoryTableName;
    }

    @Column(name = "`DB_ORDER_HISTORY_TABLE_NAME`", nullable = true)
    public void setDbOrderHistoryTableName(String dbOrderHistoryTableName) {
        this.dbOrderHistoryTableName = dbOrderHistoryTableName;
    }

    @Column(name = "`DB_ORDER_HISTORY_TABLE_NAME`", nullable = true)
    public String getDbOrderHistoryTableName() {
        return dbOrderHistoryTableName;
    }

    @Column(name = "`DB_ORDERS_TABLE_NAME`", nullable = true)
    public void setDbOrdersTableName(String dbOrdersTableName) {
        this.dbOrdersTableName = dbOrdersTableName;
    }

    @Column(name = "`DB_ORDERS_TABLE_NAME`", nullable = true)
    public String getDbOrdersTableName() {
        return dbOrdersTableName;
    }

    @Column(name = "`DB_TASKS_TABLE_NAME`", nullable = true)
    public void setDbTasksTableName(String dbTasksTableName) {
        this.dbTasksTableName = dbTasksTableName;
    }

    @Column(name = "`DB_TASKS_TABLE_NAME`", nullable = true)
    public String getDbTasksTableName() {
        return dbTasksTableName;
    }

    @Column(name = "`DB_VARIABLES_TABLE_NAME`", nullable = true)
    public void setDbVariablesTableName(String dbVariablesTableName) {
        this.dbVariablesTableName = dbVariablesTableName;
    }

    @Column(name = "`DB_VARIABLES_TABLE_NAME`", nullable = true)
    public String getDbVariablesTableName() {
        return dbVariablesTableName;
    }

    @Column(name = "`WORKING_DIRECTORY`", nullable = true)
    public void setWorkingDirectory(String workingDirectory) {
        this.workingDirectory = workingDirectory;
    }

    @Column(name = "`WORKING_DIRECTORY`", nullable = true)
    public String getWorkingDirectory() {
        return workingDirectory;
    }

    @Column(name = "`LIVE_DIRECTORY`", nullable = true)
    public void setLiveDirectory(String liveDirectory) {
        this.liveDirectory = liveDirectory;
    }

    @Column(name = "`LIVE_DIRECTORY`", nullable = true)
    public String getLiveDirectory() {
        return liveDirectory;
    }

    @Column(name = "`LOG_DIR`", nullable = true)
    public void setLogDir(String logDir) {
        this.logDir = logDir;
    }

    @Column(name = "`LOG_DIR`", nullable = true)
    public String getLogDir() {
        return logDir;
    }

    @Column(name = "`INCLUDE_PATH`", nullable = true)
    public void setIncludePath(String includePath) {
        this.includePath = includePath;
    }

    @Column(name = "`INCLUDE_PATH`", nullable = true)
    public String getIncludePath() {
        return includePath;
    }

    @Column(name = "`INI_PATH`", nullable = true)
    public void setIniPath(String iniPath) {
        this.iniPath = iniPath;
    }

    @Column(name = "`INI_PATH`", nullable = true)
    public String getIniPath() {
        return iniPath;
    }

    @Column(name = "`IS_SERVICE`", nullable = true)
    public void setIsService(Boolean isService) {
        this.isService = isService;
    }

    @Column(name = "`IS_SERVICE`", nullable = true)
    public Boolean getIsService() {
        if (isService == null) {
            return false;
        } else {
            return isService;
        }
    }

    @Column(name = "`IS_RUNNING`", nullable = true)
    public void setIsRunning(Boolean isRunning) {
        this.isRunning = isRunning;
    }

    @Column(name = "`IS_RUNNING`", nullable = true)
    public Boolean getIsRunning() {
        if (isRunning == null) {
            return false;
        } else {
            return isRunning;
        }
    }

    @Column(name = "`IS_PAUSED`", nullable = true)
    public void setIsPaused(Boolean isPaused) {
        this.isPaused = isPaused;
    }

    @Column(name = "`IS_PAUSED`", nullable = true)
    public Boolean getIsPaused() {
        if (isPaused == null) {
            return false;
        } else {
            return isPaused;
        }
    }

    @Column(name = "`IS_CLUSTER`", nullable = true)
    public void setIsCluster(Boolean isCluster) {
        this.isCluster = isCluster;
    }

    @Column(name = "`IS_CLUSTER`", nullable = true)
    public Boolean getIsCluster() {
        if (isCluster == null) {
            return false;
        } else {
            return isCluster;
        }
    }

    @Column(name = "`IS_AGENT`", nullable = true)
    public void setIsAgent(Boolean isAgent) {
        this.isAgent = isAgent;
    }

    @Column(name = "`IS_AGENT`", nullable = true)
    public Boolean getIsAgent() {
        if (isAgent == null) {
            return false;
        } else {
            return isAgent;
        }
    }

    @Column(name = "`PARAM`", nullable = true)
    public void setParam(String param) {
        this.param = param;
    }

    @Column(name = "`PARAM`", nullable = true)
    public String getParam() {
        return param;
    }
    
    @Column(name = "`URL`", nullable = true)
    public void setUrl(String url) {
        this.url = url;
    }

    @Column(name = "`URL`", nullable = true)
    public String getUrl() {
        return url;
    }    

}
