package com.sos.scheduler.history;

 

 import com.sos.hibernate.classes.DbItem;
 
import com.sos.hibernate.classes.SOSSearchFilterData;
import com.sos.scheduler.history.db.SchedulerOrderHistoryDBItem;
import com.sos.scheduler.history.db.SchedulerTaskHistoryDBItem;

/**
* \class SchedulerOrderHistoryFilter 
* 
* \brief SchedulerOrderHistoryFilter - 
* 
* \details
*
* \section SchedulerOrderHistoryFilter.java_intro_sec Introduction
*
* \section SchedulerOrderHistoryFilter.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author Uwe Risse
* \version 14.12.2011
* \see reference
*
* Created on 14.12.2011 13:53:37
 */

public class SchedulerOrderHistoryFilter extends SchedulerHistoryFilter implements com.sos.hibernate.interfaces.ISOSHibernateFilter {

	@SuppressWarnings("unused")
	private final String	conClassName	= "SchedulerHistoryFilter";
	private String			status			= "";
	protected String		jobchain		= null;
    protected String        orderid         = null;
    protected String        orderStates     = null;
	protected Long          schedulerOrderHistoryId = null;
	private boolean         isShowRunning = false;
 	
	
	public String getOrderid() {
		return orderid;
	}

	public void setOrderid(String orderid) {
		this.orderid = orderid;
	}

 
	public String getJobchain() {
		if (jobchain != null && jobchain.startsWith("/")) {
			return jobchain.substring(1);
		}else {
	    	return jobchain;
		}
	}

	   private boolean filterRunningOrError(SchedulerOrderHistoryDBItem h) {
	        if (this.isShowWithError() && !this.isShowRunning() ) {
	            return !h.haveError();
	        }
	        if (!this.isShowWithError() && this.isShowRunning() ) {
	            return (h.getEndTime() != null || h.haveError());
	        }
	        if (this.isShowWithError() && this.isShowRunning() ) {
	            return !((h.getEndTime() == null) || h.haveError());
	        }
	        return false;
	    }

	public boolean isFiltered(DbItem dbitem) {
		  SchedulerOrderHistoryDBItem h = (SchedulerOrderHistoryDBItem) dbitem;
		  
 
		  
		  return( this.getOrderIgnoreList().contains(h) || 
                  (filterRunningOrError(h)) ||

                  this.getSosSearchFilterData() != null && this.getSosSearchFilterData().getSearchfield() != null && !this.getSosSearchFilterData().getSearchfield().equals("") && 
				 ((h.getJobChain() != null && !h.getJobChain().toLowerCase().contains(this.getSosSearchFilterData().getSearchfield().toLowerCase())) &&
				 (h.getOrderId() != null && !h.getOrderId().toLowerCase().contains(this.getSosSearchFilterData().getSearchfield().toLowerCase())))); 
  
   }			 
	
	public SchedulerOrderHistoryFilter() {
		super();
	}


	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public void setJobchain(String jobchain) {
		this.jobchain = jobchain;
	}

    public Long getSchedulerOrderHistoryId() {
        return schedulerOrderHistoryId;
    }

    public void setSchedulerOrderHistoryId(Long schedulerOrderHistoryId) {
        this.schedulerOrderHistoryId = schedulerOrderHistoryId;
    }

    public String getOrderStates() {
        return orderStates;
    }

    public void setOrderStates(String orderStates) {
        this.orderStates = orderStates;
    }

	public boolean isShowRunning() {
		return isShowRunning;
	}

	public void setShowRunning(boolean isShowRunning) {
		this.isShowRunning = isShowRunning;
	}

}
