package com.sos.scheduler.history;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.prefs.Preferences;

import org.apache.log4j.Logger;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.CCombo;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableItem;
import org.hibernate.Session;

import com.sos.hibernate.classes.DbItem;
import com.sos.hibernate.classes.SOSSearchFilterData;
import com.sos.hibernate.interfaces.ISOSDashboardDataProvider;
import com.sos.scheduler.history.classes.SchedulerOrderStepHistoryTableItem;
import com.sos.scheduler.history.db.SchedulerOrderStepHistoryCompoundKey;
import com.sos.scheduler.history.db.SchedulerOrderStepHistoryDBItem;
import com.sos.scheduler.history.db.SchedulerOrderStepHistoryDBLayer;

/**
* \class SchedulerOrderStepHistoryDataProvider 
* 
* \brief SchedulerOrderStepHistoryDataProvider - 
* 
* \details
*
* \section SchedulerOrderStepHistoryDataProvider Introduction
*
* \section SchedulerOrderStepHistoryDataProvider.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author Uwe Risse
* \version 27.06.2014
* \see reference
*
* Created on 27.06.2014 09:31:01
 */

public class SchedulerOrderStepHistoryDataProvider implements ISOSDashboardDataProvider {

	@SuppressWarnings("unused")
	private final String						conClassName						= "SchedulerOrderStepHistoryDataProvider";

    private List<SchedulerOrderStepHistoryDBItem>  listOfSchedulerOrderStepHistoryDBItems   = null;
	private SchedulerOrderStepHistoryDBLayer	   schedulerOrderStepHistoryDBLayer			= null;
 	private static Logger						   logger								    = Logger.getLogger(SchedulerOrderStepHistoryDataProvider.class);
    private long historyId;
    private String timeZone                                                                 = "";
	
    
    public SchedulerOrderStepHistoryDataProvider(File configurationFile,long historyId_) {
		this.schedulerOrderStepHistoryDBLayer = new SchedulerOrderStepHistoryDBLayer(configurationFile);
		this.historyId = historyId_;
 	}

	public SchedulerOrderStepHistoryFilter getFilter() {
		return schedulerOrderStepHistoryDBLayer.getFilter();
	}

	public void resetFilter() {
	    schedulerOrderStepHistoryDBLayer.resetFilter();
	}

	public void getData(int limit) {

	    if (historyId >= 0) {
	       schedulerOrderStepHistoryDBLayer.getFilter().setLimit(limit);
           listOfSchedulerOrderStepHistoryDBItems = schedulerOrderStepHistoryDBLayer.getOrderStepHistoryItems(0,historyId);
	    }
	}

 
	public String getLogAsString(Table tableSchedulerOrderSteppHistory) {
		String log = "";
		if (tableSchedulerOrderSteppHistory.getSelectionIndex() >= 0) {
			TableItem t = tableSchedulerOrderSteppHistory.getItem(tableSchedulerOrderSteppHistory.getSelectionIndex());
			SchedulerOrderStepHistoryDBItem h = (SchedulerOrderStepHistoryDBItem) t.getData();
			if (h.getId() != null) {
				log = getLogAsString(h.getId());
			}
		}
		return log;
	}

	public String getLogAsString(SchedulerOrderStepHistoryCompoundKey schedulerOrderStepHistoryCompoundKey) {
		String log = "";
		try {
			SchedulerOrderStepHistoryDBItem schedulerOrderStepHistoryDBItem = schedulerOrderStepHistoryDBLayer.get(schedulerOrderStepHistoryCompoundKey);
			if (schedulerOrderStepHistoryDBItem != null && schedulerOrderStepHistoryDBItem.getSchedulerOrderHistoryDBItem().getLog() != null) {
				log = schedulerOrderStepHistoryDBItem.getSchedulerOrderHistoryDBItem().getLogAsString();
			}
		}
		catch (IOException e1) {
			e1.printStackTrace();
		}
		return log;
	}

	

	public void fillTable(Table table) {

		if (listOfSchedulerOrderStepHistoryDBItems != null) {
            table.setRedraw(false);
			Iterator<SchedulerOrderStepHistoryDBItem> schedulerHistoryEntries = listOfSchedulerOrderStepHistoryDBItems.iterator();
			while (schedulerHistoryEntries.hasNext()) {
			    SchedulerOrderStepHistoryDBItem h = (SchedulerOrderStepHistoryDBItem) schedulerHistoryEntries.next();
				if (schedulerOrderStepHistoryDBLayer.getFilter().isFiltered(h)) {
				}
				else {
					final SchedulerOrderStepHistoryTableItem newItemTableItem = new SchedulerOrderStepHistoryTableItem(table, SWT.BORDER);
					h.setDateTimeZone4Getters(timeZone);
					newItemTableItem.setDBItem(h);

					logger.debug("...creating tableItem: " + h.getTitle() + ":" + table.getItemCount());
					newItemTableItem.setData(h);
					newItemTableItem.setColor();
					newItemTableItem.setColumns();
				}
			}
         table.setRedraw(true);

		}
	}

 

    public String getTimeZone() {
        return timeZone;
    }

    public void setTimeZone(String timeZone) {
        this.timeZone = timeZone;
    }

    @Override
    public void fillSchedulerIds(CCombo cbSchedulerId) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setSchedulerId(String schedulerId) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setFrom(Date d) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setTo(Date d) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setSearchField(SOSSearchFilterData s) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setShowJobs(boolean b) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setShowJobChains(boolean b) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setShowWithError(boolean b) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setShowRunning(boolean b) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setIgnoreList(Preferences prefs) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void addToIgnorelist(Preferences prefs, DbItem h) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void disableIgnoreList(Preferences prefs) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void resetIgnoreList(Preferences prefs) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setLate(boolean b) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setStatus(String statusExecuted) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void beginTransaction() {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void update(DbItem h) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void commit() {
        // TODO Auto-generated method stub
        
    }

    @Override
    public Session getSession() {
        // TODO Auto-generated method stub
        return null;
    }

     
	
   
	
	 
}
